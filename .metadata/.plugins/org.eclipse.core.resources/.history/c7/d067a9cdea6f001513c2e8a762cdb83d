package com.itcast.www;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Test {

	/**
	 * @param args
	 * @throws ParseException 
	 */
	public static void main(String[] args) throws ParseException {
		testDate();
		testSimpleDateFormat();

	}

	public static void testDate(){
		//日期类 要记住的方法就是  两个构造方法     和 getTime()  和 setTime()方法
		Date d  =new Date();  // 不传入参数就是获得系统单签的时间
		//Sun Oct 11 15:17:07 CST 2015
		Date d1 = new Date(100000);   //就是1970-1-1-0    加上这里的毫秒数
		System.out.println(d);
		System.out.println(d1);
		
		d1.setTime(20000);
		System.out.println(  d1.getTime());
	}
	
	// 虽然 Date打印的时候可以打印得出     Sun Oct 11 15:17:07 CST 2015
	//但是还是不好看 所以  用SimpleDateFormat    //他是一个 简单功能强大的  时间格式输出类
	public static  void testSimpleDateFormat() throws ParseException{
		//在实际开发中    主要是   Date------>String       String------>Date
		//这些  SimpleDateFormat可以做到   format()格式化      parse()解析    
		
		Date  d = new Date();
		// y表示年 M表示 月  d 日   D表示 一年中的第几天    E表示星期  H表示时  m表示分  s表示秒
		SimpleDateFormat sf = new SimpleDateFormat("yy-MM-dd-D-E-H:m:s");
		String s = sf.format(d);
		System.out.println(s);
		
		//parse()解析    一定格式的字符串    为Date
		SimpleDateFormat sf1 = new SimpleDateFormat("yy-MM-dd-H:m:s");
		Date d1  = sf1.parse("18-11-3-3:28:15");
		System.out.println(sf1.format(d1));
		
	}

}
